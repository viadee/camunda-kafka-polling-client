server.port=8081

polling.repository-data.enabled=true
polling.repository-data.initial-timestamp=${POLLING_REPOSITORY_DATA_INITIAL_TIMESTAMP:}
polling.repository-data.interval-in-ms=30000
polling.repository-data.backward-offset-in-ms=100
polling.repository-data.last-polled-file=./lastPolled-repository.properties

polling.runtime-data.enabled=true
polling.runtime-data.initial-timestamp=${POLLING_RUNTIME_DATA_INITIAL_TIMESTAMP:}
polling.runtime-data.interval-in-ms=30000
polling.runtime-data.backward-offset-in-ms=60000
polling.runtime-data.last-polled-file=./lastPolled-runtime.properties 

polling.polling-events[0]=PROCESS_INSTANCE_UNFINISHED
polling.polling-events[1]=PROCESS_INSTANCE_FINISHED
polling.polling-events[2]=ACTIVITY_UNFINISHED
polling.polling-events[3]=ACTIVITY_FINISHED
polling.polling-events[4]=VARIABLE_DETAILS_UNFINISHED
polling.polling-events[5]=VARIABLE_DETAILS_FINISHED
polling.polling-events[6]=PROCESS_DEFINITION
polling.polling-events[7]=TASK_COMMENTS
polling.polling-events[8]=IDENTITY_LINKS_UNFINISHED_ACTIVITIES
polling.polling-events[9]=IDENTITY_LINKS_FINISHED_ACTIVITIES
polling.polling-events[10]=DECISION_DEFINITION


spring.kafka.producer.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:}
spring.kafka.producer.client-id=camunda-kafka-polling-client
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.retries=1
spring.kafka.producer.batch-size=0
spring.kafka.producer.properties.linger.ms=0
spring.kafka.producer.properties.request.timeout.ms=30000

logging.level.root=WARN
logging.level.de.viadee.camunda.kafka.pollingclient=INFO